Source: http://sourceware.org/ml/libc-alpha/2010-03/msg00064.html

This patch scratches an itch.  Each individual gcc command in the
glibc build is over 1K, which means it takes up a good chunk of my
terminal.  Most of that is include paths.  Any version of GCC new
enough to build glibc supports response files, which were added in
2005.  So use a response file for the static list of include paths.
Now the build commands are a lot shorter, and easier to use when
developing glibc.

Tested on x86_64-linux-gnu.  Please apply if acceptable.

-- 
Daniel Jacobowitz
CodeSourcery

2010-03-30  Daniel Jacobowitz  <dan@codesourcery.com>

	* Makeconfig (+common-includes): Define.
	(+includes): Use @$(common-objpfx)includes.
	* Makefile (postclean): Remove includes and includes.mk.
	* Makerules ($(common-objpfx)includes.mk): Include and create
	includes.mk.  Create includes.

Index: libc/Makeconfig
===================================================================
--- libc.orig/Makeconfig	2009-10-13 22:55:12.000000000 -0700
+++ libc/Makeconfig	2010-03-31 16:02:37.120489733 -0700
@@ -678,9 +678,10 @@ endif	# $(+cflags) == ""
 # library source directory, in the include directory, and in the
 # current directory.
 +sysdep-includes = $(addprefix -I,$(+sysdep_dirs))
++common-includes = $(+sysdep-includes) $(includes) $(sysincludes)
 +includes = -I$(..)include $(if $(subdir),$(objpfx:%/=-I%)) \
-	    $(+sysdep-includes) $(includes) \
-	    $(patsubst %/,-I%,$(..)) $(libio-include) -I. $(sysincludes)
+	    @$(common-objpfx)includes \
+	    $(patsubst %/,-I%,$(..)) $(libio-include) -I.
 
 # Since libio has several internal header files, we use a -I instead
 # of many little headers in the include directory.
Index: libc/Makefile
===================================================================
--- libc.orig/Makefile	2009-12-09 12:06:28.000000000 -0800
+++ libc/Makefile	2010-03-31 16:02:37.132481508 -0700
@@ -247,7 +247,7 @@ parent-mostlyclean: common-mostlyclean #
 parent-clean: parent-mostlyclean common-clean
 
 postclean = $(addprefix $(common-objpfx),$(postclean-generated)) \
-	    $(addprefix $(objpfx),sysd-dirs sysd-rules) \
+	    $(addprefix $(objpfx),sysd-dirs sysd-rules includes includes.mk) \
 	    $(addprefix $(objpfx),sysd-sorted soversions.mk soversions.i)
 
 clean: parent-clean
Index: libc/Makerules
===================================================================
--- libc.orig/Makerules	2009-12-09 12:06:28.000000000 -0800
+++ libc/Makerules	2010-03-31 16:02:37.140481645 -0700
@@ -254,6 +254,20 @@ ifndef sysd-rules-done
 no_deps=t
 endif
 
+-include $(common-objpfx)includes.mk
+ifneq ($(+common-includes),$(saved-includes))
+# Recreate includes.mk (and includes).
+includes-force = FORCE
+FORCE:
+endif
+$(common-objpfx)includes.mk: $(includes-force)
+	-@rm -f $@T $(common-objpfx)includesT
+	for inc in $(+common-includes); do echo "$$inc"; done \
+	  > $(common-objpfx)includesT
+	mv -f $(common-objpfx)includesT $(common-objpfx)includes
+	echo 'saved-includes := $(+common-includes)' > $@T
+	mv -f $@T $@
+
 define o-iterator-doit
 $(objpfx)%$o: %.S $(before-compile); $$(compile-command.S)
 endef
