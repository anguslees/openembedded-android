---
 xev.c |   16 ++++++++--------
 1 file changed, 8 insertions(+), 8 deletions(-)

Index: xev-1.0.2/xev.c
===================================================================
--- xev-1.0.2.orig/xev.c	2006-06-02 00:25:44.000000000 +0100
+++ xev-1.0.2/xev.c	2007-05-10 15:22:07.000000000 +0100
@@ -109,7 +109,7 @@ do_KeyPress (XEvent *eventp)
     nbytes = XLookupString (e, str, 256, &ks, NULL);
 
     /* not supposed to call XmbLookupString on a key release event */
-    if (e->type == KeyPress && xic) {
+    /*if (e->type == KeyPress && xic) {
         do {
             nmbbytes = XmbLookupString (xic, e, buf, bsize - 1, &ks, &status);
             buf[nmbbytes] = '\0';
@@ -119,7 +119,7 @@ do_KeyPress (XEvent *eventp)
                 buf = realloc (buf, bsize);
             }
         } while (status == XBufferOverflow);
-    }
+    }*/
 
     if (ks == NoSymbol)
 	ksname = "NoSymbol";
@@ -149,7 +149,7 @@ do_KeyPress (XEvent *eventp)
     }
 
     /* not supposed to call XmbLookupString on a key release event */
-    if (e->type == KeyPress && xic) {
+    /*if (e->type == KeyPress && xic) {
         printf ("    XmbLookupString gives %d bytes: ", nmbbytes);
         if (nmbbytes > 0) {
            dump (buf, nmbbytes);
@@ -157,7 +157,7 @@ do_KeyPress (XEvent *eventp)
         } else {
     	   printf ("\n");
         }
-    }
+    } */
 
     printf ("    XFilterEvent returns: %s\n", 
 	    XFilterEvent (eventp, e->window) ? "True" : "False");
@@ -804,7 +804,7 @@ main (int argc, char **argv)
         fprintf (stderr, "%s:  XSetLocaleModifiers failed\n", ProgramName);
     }
 
-    xim = XOpenIM (dpy, NULL, NULL, NULL);
+    /*xim = XOpenIM (dpy, NULL, NULL, NULL);
     if (xim == NULL) {
         fprintf (stderr, "%s:  XOpenIM failed\n", ProgramName);
     }
@@ -831,7 +831,7 @@ main (int argc, char **argv)
             }
             XFree (xim_styles);
         }
-    } 
+    }*/
 
     screen = DefaultScreen (dpy);
 
@@ -891,7 +891,7 @@ main (int argc, char **argv)
 	printf ("Outer window is 0x%lx, inner window is 0x%lx\n", w, subw);
     }
 
-    if (xim && xim_style) {
+    /*if (xim && xim_style) {
         xic = XCreateIC (xim, 
                          XNInputStyle, xim_style, 
                          XNClientWindow, w, 
@@ -901,7 +901,7 @@ main (int argc, char **argv)
         if (xic == NULL) {
             fprintf (stderr, "XCreateIC failed\n");
         }
-    }
+    }*/
 
     for (done = 0; !done; ) {
 	XEvent event;
